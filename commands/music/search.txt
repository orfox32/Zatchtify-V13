const discord = require('discord.js')
const { MessageEmbed } = require('discord.js')
const ee = require("../../settings/embed.json");

module.exports.run = async (Client, message, args, text, prefix) => {

    const member = message.mentions.members.first() || message.member
    const { channel } = message.member.voice

    if (!message.guild.me.permissionsIn(message.member.voice.channel).has("CONNECT"))
        return message.channel.send({
            embeds: [new MessageEmbed()
                .setColor(ee.wrongcolor)
                .setFooter(ee.footertext, ee.footericon)
                .setDescription(`${ee.error} I am not allowed to \`join\` your Channel, i need \`CONNECT\` permissions`)]
        })

    if (!message.guild.me.permissionsIn(message.member.voice.channel).has("SPEAK"))
        return message.channel.send({
            embeds: [new MessageEmbed()
                .setColor(ee.wrongcolor)
                .setFooter(ee.footertext, ee.footericon)
                .setDescription(`${ee.error} I am not allowed to \`speak\` to your Channel, i need \`SPEAK\` permissions`)]
        })

    if (!message.guild.me.permissionsIn(message.member.voice.channel).has("VIEW_CHANNEL"))
        return message.channel.send({
            embeds: [new MessageEmbed()
                .setColor(ee.wrongcolor)
                .setFooter(ee.footertext, ee.footericon)
                .setDescription(`${ee.error} I am not allowed to \`view\` your Channel, i need \`VIEW_CHANNEL\` permissions`)]
        })

    if (channel.userLimit != 0 && channel.full)
        return message.reply({
            embeds: [new MessageEmbed()
                .setColor(ee.wrongcolor)
                .setFooter(ee.footertext, ee.footericon)
                .setDescription(`\`${ee.error} Your Voice Channel is full, I can't join!\``)
            ],
        });

    if (message.member.voice.selfDeaf) return message.channel.send({
        embeds: [new MessageEmbed()
            .setColor(ee.wrongcolor)
            .setFooter(ee.footertext, ee.footericon)
            .setDescription(`\`❌ | You cannot run this command while deafened\``)]
    });
 
    let query = args.join(' ');
    if (!query) return message.channel.send({
        embeds: [new MessageEmbed()
            .setColor(ee.wrongcolor)
            .setDescription(`To search songs specify a query idea.`)]
    });
    let i = 0;
    try {
        Client.distube.search(query, {
            limit: 10,
            type: 'video',
            safeSearch: false,
        })
            .then(data => {
                let embed = new MessageEmbed()
                    .setColor(ee.color)
                    .setDescription(`**Search results**\n\n${data.map(song => `**${++i}**. [${song.name}](${song.url}) | \`${song.formattedDuration}\``).join('\n')}`)
                    .setTimestamp()

                return message.channel.send({ embeds: [embed] });
            }).catch(() => {
                return message.channel.send({
                    embeds: [new MessageEmbed()
                        .setColor(ee.color)
                        .setDescription(`There are no search results found about the query.`)]
                });
            })
    } catch (e) {
        console.log(`❌ | Error: \`${e}\``)
    }
}


module.exports.help = {
    name: "search",
    aliases: ['search', 'find'],
    usage: "search",
    description: "Search a song from Youtube, Spotify and Soundcloud",
    inVoiceChannel: true,
    sameVoiceChannel: true,
    userPerms: ['SEND_MESSAGES'],
    botSendPerms: ['SEND_MESSAGES'],
    botPerms: ['MANAGE_MESSAGES'],
    botEmbedPerms: ['EMBED_LINKS']
}